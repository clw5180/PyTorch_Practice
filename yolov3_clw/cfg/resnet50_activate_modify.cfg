[net]
# Training
# batch=128
# subdivisions=4

# Testing
batch=1
subdivisions=1

height=256
width=256
max_crop=448
channels=3
momentum=0.9
decay=0.0005

burn_in=1000
learning_rate=0.1
policy=poly
power=4
max_batches=1600000

angle=7
hue=.1
saturation=.75
exposure=.75
aspect=.75

### stage 1
[convolutional]   # 0
batch_normalize=1
filters=64
size=7
stride=2
pad=1
activation=leaky

### stage 2
[maxpool]        # 1
size=2
stride=2

[convolutional]  # 2
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 3
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky

[convolutional]  # 4
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

#######################  clw modify
[route]           # 5
layers = -4

[convolutional]   # 6
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky


[shortcut]  # 7
from=-3
activation=linear

##########################

[convolutional]  # 8
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 9
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky

[convolutional]  # 10
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[shortcut]  # 11
from=-4
activation=linear

[convolutional]  # 12
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 13
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky

[convolutional]  # 14
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[shortcut]  # 15
from=-4
activation=linear


### stage 3

[convolutional]   # 16
batch_normalize=1
filters=128
size=1
stride=2
#stride=1
pad=1
activation=leaky

[convolutional]  # 17
batch_normalize=1
filters=128
size=3
stride=1
#stride=2
pad=1
activation=leaky

[convolutional]  # 18
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

#######################  clw modify
[route]           # 19
layers = -4

[convolutional]   # 20   clw note: 512 and 2 is different to stage 2 !!!
batch_normalize=1
filters=512
size=1
stride=2
pad=1
activation=leaky


[shortcut]  # 21
from=-3
activation=linear

##########################

[convolutional]  # 22
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 23
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

[convolutional]  # 24
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[shortcut]  # 25
from=-4
activation=linear

[convolutional]   # 26
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 27
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

[convolutional]  # 28
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[shortcut]  #29
from=-4
activation=linear

[convolutional]  # 30
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 31
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

[convolutional]  # 32
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[shortcut]  # 33
from=-4
activation=linear


### stage 4 (即论文中的 conv4_x）
[convolutional]  # 34
batch_normalize=1
filters=256
size=1
#stride=1
stride=2
pad=1
activation=leaky

[convolutional]  # 35
batch_normalize=1
filters=256
size=3
#stride=2
stride=1
pad=1
activation=leaky

[convolutional]  # 36
batch_normalize=1
filters=1024
size=1
stride=1
pad=1
activation=leaky

#######################  clw modify
[route]           # 37
layers = -4

[convolutional]   # 38
batch_normalize=1
filters=1024
size=1
stride=2
pad=1
activation=leaky


[shortcut]  # 39
from=-3
activation=linear

##########################

[convolutional]  # 40
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 41
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[convolutional]  # 42
batch_normalize=1
filters=1024
size=1
stride=1
pad=1
activation=leaky

[shortcut]  # 43
from=-4
activation=linear

[convolutional]  # 44
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 45
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[convolutional]  # 46
batch_normalize=1
filters=1024
size=1
stride=1
pad=1
activation=leaky

[shortcut]   # 47
from=-4
activation=linear

[convolutional]  # 48
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 49
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[convolutional]  # 50
batch_normalize=1
filters=1024
size=1
stride=1
pad=1
activation=leaky

[shortcut]  # 51
from=-4
activation=linear

[convolutional]  # 52
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 53
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[convolutional]  # 54
batch_normalize=1
filters=1024
size=1
stride=1
pad=1
activation=leaky

[shortcut]  # 55
from=-4
activation=linear

[convolutional]  # 56
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 57
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[convolutional]  # 58
batch_normalize=1
filters=1024
size=1
stride=1
pad=1
activation=leaky

[shortcut]  # 59
from=-4
activation=linear


### Stage 5  / Conv 5
[convolutional]  # 60
batch_normalize=1
filters=512
size=1
#stride=1
stride=2
pad=1
activation=leaky

[convolutional]  # 61
batch_normalize=1
filters=512
size=3
#stride=2
stride=1
pad=1
activation=leaky

[convolutional]  # 62
batch_normalize=1
filters=2048
size=1
stride=1
pad=1
activation=leaky

#######################  clw modify
[route]           # 63
layers = -4

[convolutional]   # 64
batch_normalize=1
filters=2048
size=1
stride=2
pad=1
activation=leaky


[shortcut]  # 65
from=-3
activation=linear

##########################

[convolutional]  # 66
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 67
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[convolutional]  # 68
batch_normalize=1
filters=2048
size=1
stride=1
pad=1
activation=leaky

[shortcut]  # 69
from=-4
activation=linear

[convolutional]  # 70
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 71
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[convolutional]  # 72
batch_normalize=1
filters=2048
size=1
stride=1
pad=1
activation=leaky

[shortcut]  # 73
from=-4
activation=linear


######################

[convolutional]   # 74
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 75
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky

[convolutional]   # 76
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 77
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky

[convolutional]  # 78
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]  # 79
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky

[convolutional]  # 80
size=1
stride=1
pad=1
filters=75
activation=linear


[yolo]   # 81
mask = 6,7,8
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes=20
num=9
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1


[route]  # 82
layers = -4

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[upsample]
stride=2

[route]
layers = -1, 59
#layers = -1, 61



[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky

[convolutional]
size=1
stride=1
pad=1
filters=75
activation=linear


[yolo]
mask = 3,4,5
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes=20
num=9
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1



[route]
layers = -4

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[upsample]
stride=2

[route]
layers = -1, 33
#layers = -1, 36



[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky

[convolutional]
size=1
stride=1
pad=1
filters=75
activation=linear


[yolo]
mask = 0,1,2
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes=20
num=9
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1











#
# ------------- 分类网络 ----------------
#

#[convolutional]
#filters=1000
#size=1
#stride=1
#pad=1
#activation=linear

#[avgpool]

#[softmax]
#groups=1

#[cost]
#type=sse